version: '3'
services:
  database:
    image: 'postgres:latest'
    container_name: 'postgres'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: guest # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: guest # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: test # The PostgreSQL default database (automatically created at first launch)
    networks:
      - default_net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - default_net

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - 2181:2181
    networks:
      - default_net
  kafka:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
    networks:
      - default_net
  
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
     - "6379:6379"
    volumes:
     - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master
    networks:
      node_net:
        ipv4_address: 172.28.1.4

networks:
  default_net:
    driver: bridge
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16